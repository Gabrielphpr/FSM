|elevadorEsquematico
ANDARATUALU[0] <= elevador:inst.andarAtualU[0]
ANDARATUALU[1] <= elevador:inst.andarAtualU[1]
ANDARATUALU[2] <= elevador:inst.andarAtualU[2]
ANDARATUALU[3] <= elevador:inst.andarAtualU[3]
ANDARATUALU[4] <= elevador:inst.andarAtualU[4]
ANDARATUALU[5] <= elevador:inst.andarAtualU[5]
ANDARATUALU[6] <= elevador:inst.andarAtualU[6]
ccc => elevador:inst.clk
R => elevador:inst.reset
ANDREQ[0] => elevador:inst.andarReq[0]
ANDREQ[1] => elevador:inst.andarReq[1]
ANDREQ[2] => elevador:inst.andarReq[2]
ANDREQ[3] => elevador:inst.andarReq[3]
ANDARREQD[0] <= elevador:inst.andarReqD[0]
ANDARREQD[1] <= elevador:inst.andarReqD[1]
ANDARREQD[2] <= elevador:inst.andarReqD[2]
ANDARREQD[3] <= elevador:inst.andarReqD[3]
ANDARREQD[4] <= elevador:inst.andarReqD[4]
ANDARREQD[5] <= elevador:inst.andarReqD[5]
ANDARREQD[6] <= elevador:inst.andarReqD[6]
ANDARREQU[0] <= elevador:inst.andarReqU[0]
ANDARREQU[1] <= elevador:inst.andarReqU[1]
ANDARREQU[2] <= elevador:inst.andarReqU[2]
ANDARREQU[3] <= elevador:inst.andarReqU[3]
ANDARREQU[4] <= elevador:inst.andarReqU[4]
ANDARREQU[5] <= elevador:inst.andarReqU[5]
ANDARREQU[6] <= elevador:inst.andarReqU[6]
ANDATUALD[0] <= elevador:inst.andarAtualD[0]
ANDATUALD[1] <= elevador:inst.andarAtualD[1]
ANDATUALD[2] <= elevador:inst.andarAtualD[2]
ANDATUALD[3] <= elevador:inst.andarAtualD[3]
ANDATUALD[4] <= elevador:inst.andarAtualD[4]
ANDATUALD[5] <= elevador:inst.andarAtualD[5]
ANDATUALD[6] <= elevador:inst.andarAtualD[6]
ESTADO[0] <= elevador:inst.estadoAtual[0]
ESTADO[1] <= elevador:inst.estadoAtual[1]
CLKFPGA => debouncer:inst1.clk_fpga
C => debouncer:inst1.input_key


|elevadorEsquematico|elevador:inst
clk => andarReqU[0]~reg0.CLK
clk => andarReqU[1]~reg0.CLK
clk => andarReqU[2]~reg0.CLK
clk => andarReqU[3]~reg0.CLK
clk => andarReqU[4]~reg0.CLK
clk => andarReqU[5]~reg0.CLK
clk => andarReqU[6]~reg0.CLK
clk => andarReqD[0]~reg0.CLK
clk => andarReqD[1]~reg0.CLK
clk => andarReqD[2]~reg0.CLK
clk => andarReqD[3]~reg0.CLK
clk => andarReqD[4]~reg0.CLK
clk => andarReqD[5]~reg0.CLK
clk => andarReqD[6]~reg0.CLK
clk => andarAtualU[0]~reg0.CLK
clk => andarAtualU[1]~reg0.CLK
clk => andarAtualU[2]~reg0.CLK
clk => andarAtualU[3]~reg0.CLK
clk => andarAtualU[4]~reg0.CLK
clk => andarAtualU[5]~reg0.CLK
clk => andarAtualU[6]~reg0.CLK
clk => andarAtualD[0]~reg0.CLK
clk => andarAtualD[1]~reg0.CLK
clk => andarAtualD[2]~reg0.CLK
clk => andarAtualD[3]~reg0.CLK
clk => andarAtualD[4]~reg0.CLK
clk => andarAtualD[5]~reg0.CLK
clk => andarAtualD[6]~reg0.CLK
clk => estadoAtual[0]~reg0.CLK
clk => estadoAtual[1]~reg0.CLK
clk => andar2[0].CLK
clk => andar2[1].CLK
clk => andar2[2].CLK
clk => andar2[3].CLK
clk => andar2[4].CLK
clk => andar2[5].CLK
clk => andar2[6].CLK
clk => andar2[7].CLK
clk => andar2[8].CLK
clk => andar2[9].CLK
clk => andar2[10].CLK
clk => andar2[11].CLK
clk => andar2[12].CLK
clk => andar2[13].CLK
clk => andar2[14].CLK
clk => andar2[15].CLK
clk => andar2[16].CLK
clk => andar2[17].CLK
clk => andar2[18].CLK
clk => andar2[19].CLK
clk => andar2[20].CLK
clk => andar2[21].CLK
clk => andar2[22].CLK
clk => andar2[23].CLK
clk => andar2[24].CLK
clk => andar2[25].CLK
clk => andar2[26].CLK
clk => andar2[27].CLK
clk => andar2[28].CLK
clk => andar2[29].CLK
clk => andar2[30].CLK
clk => andar2[31].CLK
clk => andar1[0].CLK
clk => andar1[1].CLK
clk => andar1[2].CLK
clk => andar1[3].CLK
clk => andar1[4].CLK
clk => andar1[5].CLK
clk => andar1[6].CLK
clk => andar1[7].CLK
clk => andar1[8].CLK
clk => andar1[9].CLK
clk => andar1[10].CLK
clk => andar1[11].CLK
clk => andar1[12].CLK
clk => andar1[13].CLK
clk => andar1[14].CLK
clk => andar1[15].CLK
clk => andar1[16].CLK
clk => andar1[17].CLK
clk => andar1[18].CLK
clk => andar1[19].CLK
clk => andar1[20].CLK
clk => andar1[21].CLK
clk => andar1[22].CLK
clk => andar1[23].CLK
clk => andar1[24].CLK
clk => andar1[25].CLK
clk => andar1[26].CLK
clk => andar1[27].CLK
clk => andar1[28].CLK
clk => andar1[29].CLK
clk => andar1[30].CLK
clk => andar1[31].CLK
clk => estado~4.DATAIN
reset => andarAtualU[0]~reg0.PRESET
reset => andarAtualU[1]~reg0.ACLR
reset => andarAtualU[2]~reg0.ACLR
reset => andarAtualU[3]~reg0.ACLR
reset => andarAtualU[4]~reg0.ACLR
reset => andarAtualU[5]~reg0.ACLR
reset => andarAtualU[6]~reg0.ACLR
reset => andarAtualD[0]~reg0.PRESET
reset => andarAtualD[1]~reg0.ACLR
reset => andarAtualD[2]~reg0.ACLR
reset => andarAtualD[3]~reg0.ACLR
reset => andarAtualD[4]~reg0.ACLR
reset => andarAtualD[5]~reg0.ACLR
reset => andarAtualD[6]~reg0.ACLR
reset => estadoAtual[0]~reg0.PRESET
reset => estadoAtual[1]~reg0.ACLR
reset => andar2[0].ACLR
reset => andar2[1].ACLR
reset => andar2[2].ACLR
reset => andar2[3].ACLR
reset => andar2[4].ACLR
reset => andar2[5].ACLR
reset => andar2[6].ACLR
reset => andar2[7].ACLR
reset => andar2[8].ACLR
reset => andar2[9].ACLR
reset => andar2[10].ACLR
reset => andar2[11].ACLR
reset => andar2[12].ACLR
reset => andar2[13].ACLR
reset => andar2[14].ACLR
reset => andar2[15].ACLR
reset => andar2[16].ACLR
reset => andar2[17].ACLR
reset => andar2[18].ACLR
reset => andar2[19].ACLR
reset => andar2[20].ACLR
reset => andar2[21].ACLR
reset => andar2[22].ACLR
reset => andar2[23].ACLR
reset => andar2[24].ACLR
reset => andar2[25].ACLR
reset => andar2[26].ACLR
reset => andar2[27].ACLR
reset => andar2[28].ACLR
reset => andar2[29].ACLR
reset => andar2[30].ACLR
reset => andar2[31].ACLR
reset => andar1[0].ACLR
reset => andar1[1].ACLR
reset => andar1[2].ACLR
reset => andar1[3].ACLR
reset => andar1[4].ACLR
reset => andar1[5].ACLR
reset => andar1[6].ACLR
reset => andar1[7].ACLR
reset => andar1[8].ACLR
reset => andar1[9].ACLR
reset => andar1[10].ACLR
reset => andar1[11].ACLR
reset => andar1[12].ACLR
reset => andar1[13].ACLR
reset => andar1[14].ACLR
reset => andar1[15].ACLR
reset => andar1[16].ACLR
reset => andar1[17].ACLR
reset => andar1[18].ACLR
reset => andar1[19].ACLR
reset => andar1[20].ACLR
reset => andar1[21].ACLR
reset => andar1[22].ACLR
reset => andar1[23].ACLR
reset => andar1[24].ACLR
reset => andar1[25].ACLR
reset => andar1[26].ACLR
reset => andar1[27].ACLR
reset => andar1[28].ACLR
reset => andar1[29].ACLR
reset => andar1[30].ACLR
reset => andar1[31].ACLR
reset => estado~6.DATAIN
reset => andarReqU[0]~reg0.ENA
reset => andarReqD[6]~reg0.ENA
reset => andarReqD[5]~reg0.ENA
reset => andarReqD[4]~reg0.ENA
reset => andarReqD[3]~reg0.ENA
reset => andarReqD[2]~reg0.ENA
reset => andarReqD[1]~reg0.ENA
reset => andarReqD[0]~reg0.ENA
reset => andarReqU[6]~reg0.ENA
reset => andarReqU[5]~reg0.ENA
reset => andarReqU[4]~reg0.ENA
reset => andarReqU[3]~reg0.ENA
reset => andarReqU[2]~reg0.ENA
reset => andarReqU[1]~reg0.ENA
andarReq[0] => Div0.IN7
andarReq[0] => Mod0.IN7
andarReq[0] => LessThan0.IN32
andarReq[0] => LessThan1.IN32
andarReq[0] => andar2[0].DATAIN
andarReq[1] => Div0.IN6
andarReq[1] => Mod0.IN6
andarReq[1] => LessThan0.IN31
andarReq[1] => LessThan1.IN31
andarReq[1] => andar2[1].DATAIN
andarReq[2] => Div0.IN5
andarReq[2] => Mod0.IN5
andarReq[2] => LessThan0.IN30
andarReq[2] => LessThan1.IN30
andarReq[2] => andar2[2].DATAIN
andarReq[3] => Div0.IN4
andarReq[3] => Mod0.IN4
andarReq[3] => LessThan0.IN29
andarReq[3] => LessThan1.IN29
andarReq[3] => andar2[3].DATAIN
andarReqD[0] <= andarReqD[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqD[1] <= andarReqD[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqD[2] <= andarReqD[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqD[3] <= andarReqD[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqD[4] <= andarReqD[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqD[5] <= andarReqD[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqD[6] <= andarReqD[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqU[0] <= andarReqU[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqU[1] <= andarReqU[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqU[2] <= andarReqU[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqU[3] <= andarReqU[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqU[4] <= andarReqU[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqU[5] <= andarReqU[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarReqU[6] <= andarReqU[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualD[0] <= andarAtualD[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualD[1] <= andarAtualD[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualD[2] <= andarAtualD[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualD[3] <= andarAtualD[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualD[4] <= andarAtualD[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualD[5] <= andarAtualD[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualD[6] <= andarAtualD[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualU[0] <= andarAtualU[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualU[1] <= andarAtualU[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualU[2] <= andarAtualU[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualU[3] <= andarAtualU[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualU[4] <= andarAtualU[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualU[5] <= andarAtualU[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
andarAtualU[6] <= andarAtualU[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
estadoAtual[0] <= estadoAtual[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
estadoAtual[1] <= estadoAtual[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|elevadorEsquematico|debouncer:inst1
clk_fpga => counter[0].CLK
clk_fpga => counter[1].CLK
clk_fpga => counter[2].CLK
clk_fpga => counter[3].CLK
clk_fpga => counter[4].CLK
clk_fpga => counter[5].CLK
clk_fpga => counter[6].CLK
clk_fpga => counter[7].CLK
clk_fpga => counter[8].CLK
clk_fpga => counter[9].CLK
clk_fpga => counter[10].CLK
clk_fpga => counter[11].CLK
clk_fpga => counter[12].CLK
clk_fpga => counter[13].CLK
clk_fpga => counter[14].CLK
clk_fpga => counter[15].CLK
clk_fpga => out_key~reg0.CLK
clk_fpga => intermediate.CLK
rst_debouncer => counter[0].ACLR
rst_debouncer => counter[1].ACLR
rst_debouncer => counter[2].ACLR
rst_debouncer => counter[3].ACLR
rst_debouncer => counter[4].ACLR
rst_debouncer => counter[5].ACLR
rst_debouncer => counter[6].ACLR
rst_debouncer => counter[7].ACLR
rst_debouncer => counter[8].ACLR
rst_debouncer => counter[9].ACLR
rst_debouncer => counter[10].ACLR
rst_debouncer => counter[11].ACLR
rst_debouncer => counter[12].ACLR
rst_debouncer => counter[13].ACLR
rst_debouncer => counter[14].ACLR
rst_debouncer => counter[15].ACLR
rst_debouncer => out_key~reg0.ALOAD
rst_debouncer => intermediate.ALOAD
input_key => always0.IN1
input_key => out_key~reg0.ADATA
input_key => intermediate.ADATA
input_key => intermediate.DATAIN
out_key <= out_key~reg0.DB_MAX_OUTPUT_PORT_TYPE


